package vuln

import (
	"fmt"
	"io"
	"net/http"
	"strings"
)

// getKnownExploitedVulnerabilities checks if the provided vulnerabilities are present in the CISA KEV database.
func getKnownExploitedVulnerabilities(vulns VulnerabilityList) (exploitedVulns VulnerabilityList, err error) {
	kevDB, err := getKEVdb()
	if err != nil {
		return nil, err
	}
	for _, vuln := range vulns {
		if strings.Contains(kevDB, vuln.VulnID) {
			exploitedVulns = append(exploitedVulns, vuln)
		}
	}
	return exploitedVulns, nil
}

// getKEVdb fetches the CISA KEV database JSON feed and returns it as a string.
func getKEVdb() (kev string, err error) {
	response, err := http.Get("https://www.cisa.gov/sites/default/files/feeds/known_exploited_vulnerabilities.json")
	if err != nil {
		return "", fmt.Errorf("unable to fetch the CISA KEV data feed: %w", err)
	}
	defer response.Body.Close()
	responseBytes, err := io.ReadAll(response.Body)
	if err != nil {
		return "", err
	}
	return string(responseBytes), nil
}
