package printer

import (
	"fmt"
	"os"
	"text/tabwriter"

	"github.com/fatih/color"
	"github.com/lucasrod16/exploitlens/pkg/vuln"
)

// PrintVulnerabilityData prints vulnerability data to stdout.
func PrintVulnerabilityData(vulns, exploitedVulns vuln.VulnerabilityList) {
	w := tabwriter.NewWriter(os.Stdout, 0, 0, 2, ' ', 0)
	headerData := "NAME\tINSTALLED\tFIXED-IN\tTYPE\tVULNERABILITY\tSEVERITY"
	if len(exploitedVulns) > 0 {
		printVulnerabilities(vulns, w, headerData)
		printKnownExploitedVulnerabilities(exploitedVulns, w, headerData)
		w.Flush()
		os.Exit(1)
	}
	printVulnerabilities(vulns, w, headerData)
	w.Flush()
}

// printKnownExploitedVulnerabilities prints all known exploited vulnerabilities to stdout.
func printKnownExploitedVulnerabilities(exploitedVulns vuln.VulnerabilityList, w *tabwriter.Writer, headerData string) {
	yellow := color.New(color.FgHiYellow)
	yellow.Fprintln(w, "*** WARNING: These are known exploited vulnerabilities ***")
	yellow.Fprintln(w, headerData)
	for _, exploitedVuln := range exploitedVulns {
		yellow.Fprintln(w, exploitedVuln)
	}
}

// printVulnerabilities prints all vulnerabilities to stdout.
func printVulnerabilities(vulns vuln.VulnerabilityList, w *tabwriter.Writer, headerData string) {
	fmt.Fprintln(w, headerData)
	for _, vuln := range vulns {
		fmt.Fprintln(w, vuln)
	}
}
