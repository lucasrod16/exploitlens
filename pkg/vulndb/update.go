package vulndb

import (
	"github.com/anchore/grype/grype"
	"github.com/anchore/grype/grype/db"
	"github.com/anchore/grype/grype/store"
	"github.com/defenseunicorns/zarf/src/pkg/message"
)

func UpdateVulnDB() (store *store.Store, err error) {
	spinner := message.NewProgressSpinner("Checking for updates to the vulnerability database")
	defer spinner.Stop()
	store, closer, err := fetchLatestGrypeDB()
	if err != nil {
		return nil, err
	}
	if closer != nil {
		defer closer.Close()
	}
	spinner.Success()
	return store, nil
}

// fetchLatestGrypeDB fetches the latest grype vulnerability database.
func fetchLatestGrypeDB() (store *store.Store, closer *db.Closer, err error) {
	dbConfig := db.Config{
		DBRootDir:  rootPath,
		ListingURL: "https://toolbox-data.anchore.io/grype/databases/listing.json",
	}
	store, _, closer, err = grype.LoadVulnerabilityDB(dbConfig, true)
	if err != nil {
		return nil, nil, err
	}
	return store, closer, nil
}
