package vulndb

import (
	"database/sql"
	"fmt"
	"os"
	"path/filepath"
)

// ConnectToVulnDB establishes a connection to the grype vulnerability database.
func ConnectToVulnDB() (db *sql.DB, err error) {
	dbPath, err := getGrypeDBpath()
	if err != nil {
		return nil, err
	}
	db, err = sql.Open("sqlite3", dbPath)
	if err != nil {
		return nil, fmt.Errorf("unable to connect to the vulnerability database: %w", err)
	}
	err = db.Ping()
	if err != nil {
		return nil, fmt.Errorf("unable to ping the vulnerability database: %w", err)
	}
	return db, nil
}

/*
getGrypeDBpath walks the ~/.grype/vuln-db/ path
searching for the grype SQLite database file (vulnerability.db),
and returns the absolute path as a string.
*/
func getGrypeDBpath() (dbPath string, err error) {
	err = filepath.Walk(rootPath, func(path string, info os.FileInfo, err error) error {
		if err != nil {
			return err
		}
		if info.Name() == "vulnerability.db" {
			dbPath, err = filepath.Abs(path)
			if err != nil {
				return err
			}
		}
		return nil
	})
	if err != nil {
		return "", err
	}
	return dbPath, nil
}
