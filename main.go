package main

import (
	"fmt"
	"os"

	"github.com/defenseunicorns/zarf/src/pkg/message"
	"github.com/lucasrod16/exploitlens/pkg/printer"
	"github.com/lucasrod16/exploitlens/pkg/vuln"
	"github.com/lucasrod16/exploitlens/pkg/vulndb"
	_ "github.com/mattn/go-sqlite3"
)

func main() {
	validateArgs()
	image := os.Args[1]

	store, err := vulndb.UpdateVulnDB()
	if err != nil {
		fmt.Println(err)
		os.Exit(1)
	}

	matchMap, err := vuln.ScanImage(*store, image)
	if err != nil {
		fmt.Println(err)
		os.Exit(1)
	}
	if len(matchMap) == 0 {
		message.Infof("No vulnerabilities found for image: %s\n", image)
		os.Exit(0)
	}

	vulns, exploitedVulns, err := vuln.PrepareVulnerabilityMetadata(matchMap)
	if err != nil {
		fmt.Println(err)
		os.Exit(1)
	}
	printer.PrintVulnerabilityData(vulns, exploitedVulns)
}

func validateArgs() {
	if len(os.Args) != 2 {
		message.Warn("Accepts a single argument (container image to scan)")
		message.Info("Example: `exploitlens golang:latest`")
		os.Exit(1)
	}
}
